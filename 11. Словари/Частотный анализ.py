'''
Условие
Дан текст: в первой строке записано количество строк в 
тексте, а затем сами строки. Выведите все слова, встречающиеся в 
тексте, по одному на каждую строку. Слова должны быть отсортированы 
по убыванию их количества появления в тексте, а при одинаковой частоте появления — в лексикографическом порядке.

Указание. После того, как вы создадите словарь всех слов, вам захочется 
отсортировать его по частоте встречаемости слова. Желаемого можно добиться,
 если создать список, элементами которого будут кортежи из двух элементов: 
 частота встречаемости слова и само слово. Например, [(2, 'hi'), (1, 'what'), (3, 'is')]. 
 Тогда стандартная сортировка будет сортировать список кортежей, 
 при этом кортежи сравниваются по первому элементу, а если они равны — то по второму. Это почти то, что требуется в задаче.
'''

#Мое решение
counter = {}
for i in range(int(input())):
    line = input().split()
    for word in line:
        counter[word] = counter.get(word, 0) + 1 

l = []
for val,key in counter.items():
    d = (val,key)
    l.append(d)    
s = sorted(l, key=lambda tup:(-tup[1], tup[0])) #Это дело подсмотрел, придумал не сам
for i in range(len(s)):
        print(s[i][0])


#Правильное решение
from collections import Counter

words = []
for _ in range(int(input())):
    words.extend(input().split())

counter = Counter(words)
pairs = [(-pair[1], pair[0]) for pair in counter.most_common()]
words = [pair[1] for pair in sorted(pairs)]
print('\n'.join(words))